# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # start with an Ubuntu 18.04 box
  config.vm.box = "ubuntu/bionic64"

  # forward ports in the guest's microservices to host ports
  config.vm.network "forwarded_port", guest: 8000, host: 8000 # conductor-service-phr
  config.vm.network "forwarded_port", guest: 8001, host: 8001 # authentication-service-phr
  config.vm.network "forwarded_port", guest: 8002, host: 8002 # mpi-service
  config.vm.network "forwarded_port", guest: 8003, host: 8003 # cdr-service-openehr
  config.vm.network "forwarded_port", guest: 8080, host: 8080 # openid-connect-server

  config.vm.provider "virtualbox" do |v|
    v.memory = 4096
    v.cpus = 2
    v.gui = true
  end

  # Sync the local clones of the development repos with the VM filesystem
  config.vm.synced_folder "../../ripple-pulsetile", "/ripple-pulsetile"   # Pulsetile
  config.vm.synced_folder "../../ripple-qewd", "/ripple-qewd"

  # put the headless-version's docker-compose.yml in the right place
  config.vm.synced_folder "../headless-version/", "/docker/"

  # system updates
  config.vm.provision :shell, inline: "sudo apt update"
  # localization (only required for en-uk)
  config.vm.provision :shell, inline: "sudo apt install -y language-pack-en"
  # install virtualbox guest utils which enable the screen and better integration
  config.vm.provision :shell, inline: "sudo apt install -y virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11"
  # install graphical UI
  config.vm.provision :shell, inline: "sudo apt-get install -y --no-install-recommends ubuntu-desktop"
  # install atom and other utilities
  config.vm.provision :shell, inline: "curl -sL https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add -"
  config.vm.provision :shell, inline: "echo 'deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main' > /etc/apt/sources.list.d/atom.list"
  config.vm.provision :shell, inline: "sudo apt update"
  config.vm.provision :shell, inline: "sudo apt-get install -y atom"
  config.vm.provision :shell, inline: "sudo apt-get install -y chromium-browser"
  
  # install docker
  config.vm.provision :docker, run: "always"

  # PROVISION CONTAINERS USING DOCKER-COMPOSE
  config.vm.provision :docker_compose, yml: "/docker/docker-compose.yml", rebuild: true, run: "always"
end
